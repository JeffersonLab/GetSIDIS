9c9,10
< #include "SIDIS.h"
---
> //#include "SIDIS.h"
> #include "SIDIS_Lite.h" //this version doesn't include LHAPDF
14c15
<     cout<<"oO0 SIDIS Events Generators for SoLID or EIC                  0Oo//"<<endl;
---
>     cout<<"oO0 SIDIS Events Generators for SoLID or EIC or Spectrometer  0Oo//"<<endl;
33c34
<     Double_t Q2, W, Wp, x, y, z, pt, nu, s, gamma, epsilon, jacoF;
---
>     Double_t Q2, W, Wp, x, y, z, pt, nu, s, gamma, epsilon,rapidity, jacoF;
35c36
<     if (config != "EIC" && config != "SoLID"){
---
>     if (config != "EIC" && config != "SoLID" && config != "SPECT"){
75c76
<     Double_t px_ele, py_ele,pz_ele, px_had, py_had, pz_had, E0_ele,E0_had;
---
>     Double_t px_ele, py_ele,pz_ele, px_had, py_had, pz_had, E_ele,E_had;
85a87
>     Double_t Ph_Max_e = 0.0,Ph_Min_e = 0.0,Ph_Max_h = 0.0, Ph_Min_h = 0.0;
90a93,94
>         Ph_Min_e = SoLID_Ph_Min_e; Ph_Max_e = SoLID_Ph_Max_e; 
>         Ph_Min_h = SoLID_Ph_Min_h; Ph_Max_h = SoLID_Ph_Max_h;
94d97
< 
100c103
<     if(config=="EIC" ){
---
>     else if(config=="EIC" ){
104a108,109
>         Ph_Min_e = EIC_Ph_Min_e; Ph_Max_e = EIC_Ph_Max_e; 
>         Ph_Min_h = EIC_Ph_Min_h; Ph_Max_h = EIC_Ph_Max_h;    
108d112
< 
111a116,129
>     else if(config=="SPECT"){
>         Mom_Min_e = SPECT_Mom_Min_e;  Mom_Max_e = SPECT_Mom_Max_e; 
>         Mom_Min_h = SPECT_Mom_Min_h;  Mom_Max_h = SPECT_Mom_Max_h;
>         Th_Min_e = SPECT_Th_Min_e; Th_Max_e = SPECT_Th_Max_e; 
>         Th_Min_h = SPECT_Th_Min_h; Th_Max_h = SPECT_Th_Max_h;    
>         Ph_Min_e = SPECT_Ph_Min_e; Ph_Max_e = SPECT_Ph_Max_e; 
>         Ph_Min_h = SPECT_Ph_Min_h; Ph_Max_h = SPECT_Ph_Max_h;    
> 
>         beamsize_x_ele = SPECT_BeamSizeX_ele;
>         beamsize_y_ele = SPECT_BeamSizeY_ele;
> 
>         vertex_length = SPECT_Target_Length;
>         vertex_center = SPECT_Target_Center;
>     }
113,114c131,132
<     Double_t electron_phase_space=(cos(Th_Min_e/DEG) - cos(Th_Max_e/DEG))*2*PI*(Mom_Max_e - Mom_Min_e);
<     Double_t hadron_phase_space=(cos(Th_Min_h/DEG) - cos(Th_Max_h/DEG))*2*PI*(Mom_Max_h - Mom_Min_h);
---
>     Double_t electron_phase_space =(cos(Th_Min_e/DEG) - cos(Th_Max_e/DEG))*(Ph_Max_e/DEG - Ph_Min_e/DEG)*(Mom_Max_e - Mom_Min_e);
>     Double_t hadron_phase_space   =(cos(Th_Min_h/DEG) - cos(Th_Max_h/DEG))*(Ph_Max_h/DEG - Ph_Min_h/DEG)*(Mom_Max_h - Mom_Min_h);
127a146,147
>     if(bXSMode)
>         filename1 = Form("%s_pos_%d.root",filename0.Data(), Int_t(FileNo));
140a161
>     t1->Branch("rapidity",&rapidity,"data/D");
167c188
<     t1->Branch("E0_ele",&E0_ele, "E0_ele/D");
---
>     t1->Branch("E_ele",&E_ele, "E_ele/D");
171c192
<     t1->Branch("E0_had",&E0_had, "E0_had/D");
---
>     t1->Branch("E_had",&E_had, "E_had/D");
179a201,202
>     if(bXSMode)
>         filename2 = Form("%s_neg_%d.root",filename0.Data(), Int_t(FileNo));
183c206
<     if(config=="SoLID" || config=="EIC" ){
---
>     if(config=="SoLID" || config=="EIC" || bXSMode ){ //If it is in bXSModle, t1 save hp events and t2 save hm events
192a216
>         t2->Branch("rapidity",&rapidity,"data/D");
213c237
<         t2->Branch("E0_ele",&E0_ele, "E0_ele/D");
---
>         t2->Branch("E_ele",&E_ele, "E_ele/D");
217c241
<         t2->Branch("E0_had",&E0_had, "E0_had/D");
---
>         t2->Branch("E_had",&E_had, "E_had/D");
246a271
>         t3->Branch("rapidity",&rapidity,"data/D");
267c292
<         t3->Branch("E0_ele",&E0_ele, "E0_ele/D");
---
>         t3->Branch("E_ele",&E_ele, "E_ele/D");
271c296
<         t3->Branch("E0_had",&E0_had, "E0_had/D");
---
>         t3->Branch("E_had",&E_had, "E_had/D");
288a314
>         t4->Branch("rapidity",&rapidity,"data/D");
309c335
<         t4->Branch("E0_ele",&E0_ele, "E0_ele/D");
---
>         t4->Branch("E_ele",&E_ele, "E_ele/D");
313c339
<         t4->Branch("E0_had",&E0_had, "E0_had/D");
---
>         t4->Branch("E_had",&E_had, "E_had/D");
324c350
<     ofstream pos_gemc, neg_gemc;
---
>     ofstream pos_gemc, neg_gemc;/*{{{*/
330,331c356,358
<     }
<     //Only initialize once here
---
>     }/*}}}*/
> 
>     //Only initialize once here/*{{{*/
335,337c362,388
<     //1->LO need CTEQ6L1,  2->NLO need CTEQ6.1M, default is 2
<     //3->free L0 CTEQ6L1 PDF, 4->free NL0 CTEQ6.1M PDF, default is 4
<     //sidis->SetCTEQOrder(2);
---
>     ////////////////////////////////
>     //*** If using EPS09, two CTEQ PDF sets are used for LO and NLO EPS09 sets
>     //*** 1->LO need CTEQ6L1,  2->NLO need CTEQ6.1M, default is 2
>     //////////
>     //sidis->SetEPS09(2);
>     ////////////////////////////////
>    
>     ////////////////////////////////
>     /////////////
>     //*** If using CTEQPDF, default is CTEQ6.1M, but you can specify the name of the PDF sets
>     //*** For exmaple, 4--> CTEQ6L1 (LO), 200-->CTEQ6.1M (NLO)
>     //*** See ./cteq-pdf-1.0.4/Cteq6Pdf-2008.txt for details
>     /////////////
>     //SetCTEQ( mode);
>     ////////////////////////////////
>      
>     ////////////////////////////////
>     //*** If using LHAPDF6, default is "CTnlo", but you can add this line here to specify the set of PDF you want
>     ////////////////////////////////
>     ////*** in general, just tell the name of the set
>     ////***  see https://lhapdf.hepforge.org/pdfsets.html 
>     //SetLHAPDF("CJ15nlo");
>    
>     ////*** Or if using nCTEQ, add this to specify the associated PDF set of the target
>     //sidis->SetLHAPDF(A, Z); 
>     ////////////////////////////////
>     /*}}}*/
340c391
<     while(exitcondition){
---
>     while(exitcondition){/*{{{*/
349c400
<         phi_gen = gRandom->Uniform(0.,2.*PI);
---
>         phi_gen = gRandom->Uniform(Ph_Min_e/DEG,Ph_Max_e/DEG);
358c409
<         phi_gen = gRandom->Uniform(0.,2.*PI);
---
>         phi_gen = gRandom->Uniform(Ph_Min_h/DEG,Ph_Max_h/DEG);
364c415
<         sidis->SetKin(momentum_ele, momentum_ion,
---
>         sidis->SetKin(momentum_ele, momentum_ion,/*{{{*/
372,373c423,424
<         px_ele = sidis->px_ele;	py_ele = sidis->py_ele;	pz_ele = sidis->pz_ele; E0_ele = sidis->E0_ele;
<         px_had = sidis->px_had;	py_had = sidis->py_had;	pz_had = sidis->pz_had; E0_had = sidis->E0_had;
---
>         px_ele = sidis->px_ele;	py_ele = sidis->py_ele;	pz_ele = sidis->pz_ele; E_ele = sidis->E_ele;
>         px_had = sidis->px_had;	py_had = sidis->py_had;	pz_had = sidis->pz_had; E_had = sidis->E_had;
377c428,429
<         jacoF=sidis->jacoF;
---
>         rapidity = sidis->rapidity;
>         jacoF=sidis->jacoF;/*}}}*/
382,386c434,439
<                         && ((count[0]<number_of_events&&pt<=1.0&&Q2<=10.) 
<                             || (count[1]<number_of_events&&pt>1.0&&Q2<=10.)
<                             || (count[2]<number_of_events&&pt<=1.0&&Q2>10.)
<                             || (count[3]<number_of_events&&pt>1.0&&Q2>10.)) 
<                     )
---
>                         &&( (!bXSMode&&((count[0]<number_of_events&&pt<=1.0&&Q2<=10.)
>                                     || (count[1]<number_of_events&&pt>1.0&&Q2<=10.)
>                                     ||(count[2]<number_of_events&&pt<=1.0&&Q2>10.)
>                                     || (count[3]<number_of_events&&pt>1.0&&Q2>10.)))
>                             ||(bXSMode&&((count[0]<number_of_events)
>                                     || (count[1]<number_of_events)))))
388,392c441,446
<                         && ((count[0]<number_of_events&&pt<=1.0&&Q2<=10.) 
<                             || (count[1]<number_of_events&&pt>1.0&&Q2<=10.))
<                       ) 
<                   )){
< 
---
>                         &&( (!bXSMode&&((count[0]<number_of_events&&pt<=1.0&&Q2<=10.)
>                                     || (count[1]<number_of_events&&pt>1.0&&Q2<=10.)))
>                             ||(bXSMode&&((count[0]<number_of_events)
>                                     || (count[1]<number_of_events))))) 
>                     ||(config=="SPECT" && z>0.2&&z<0.9 && count[0]<number_of_events)))
>         {
394c448
<             sidis->CalcXS();
---
>             sidis->CalcXS();/*{{{*/
399c453
<             dilute_hm = sidis->GetDilute_HM();
---
>             dilute_hm = sidis->GetDilute_HM();/*}}}*/
401c455
<             //to avoid some wired behavior in log scale
---
>             //to avoid some wired behavior in log scale/*{{{*/
418,421c472
<            
<  
<             double cdxs = dxs_hp;
<             if(cdxs>dxs_hm) cdxs = dxs_hm;
---
>             /*}}}*/
422a474
>             /*LUND For Positive Hadron{{{*/
424,426c476,477
<             Double_t cdxs_max_rndm = cdxs_max * gRandom->Uniform(0, 1);/*{{{*/
<             if(cdxs < cdxs_max_rndm){
<                 /*Output as LUND format for GEMC{{{*/
---
>             Double_t cdxs_max_rndm_hp = cdxs_max * gRandom->Uniform(0, 1);
>             if(bLUND&&dxs_hp > cdxs_max_rndm_hp){
428,527c479,527
<                 if(bLUND){
<                     pos_gemc<<Form("    %2d \t %10.4e \t %10.4e \t %10.4e \t %4.3f \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",/*{{{*/
<                             2, //ele+had
<                             x,
<                             z,
<                             pt,
<                             1.0, //pol = 1.0 for now
<                             Q2,
<                             W,
<                             phi_s,
<                             phi_h,
<                             dxs_hp						
<                             )<<endl;
< 
<                     //electron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
<                     pos_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
<                             1, //index
<                             -1.0,//charge
<                             1, //=1 for active 
<                             11,//pid
<                             0,// parent pid, not in used now
<                             0,// doughter for decay bookkeeping, not in used now
<                             px_ele,
<                             py_ele,
<                             pz_ele,
<                             E0_ele,
<                             0.0005, //mass not in used	
<                             vx_ele, //vx
<                             vy_ele, //vx
<                             vz_ele  //vx
<                             )<<endl;
<                     //hadron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
<                     pos_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
<                             2, //index
<                             charge_pos,//charge
<                             1, //=1 for active 
<                             pid_pos,//pid
<                             0,// parent pid, not in used now
<                             0,// doughter for decay bookkeeping, not in used now
<                             px_had,
<                             py_had,
<                             pz_had,
<                             E0_had, 
<                             mass_had, //mass not in used
<                             vx_had, //vx
<                             vy_had, //vx
<                             vz_had  //vx
<                             )<<endl;/*}}}*/
<                     
<                     neg_gemc<<Form("    %2d \t %10.4e \t %10.4e \t %10.4e \t %4.3f \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",/*{{{*/
<                             2, //ele+had
<                             x,
<                             z,
<                             pt,
<                             1.0, //pol = 1.0 for now
<                             Q2,
<                             W,
<                             phi_s,
<                             phi_h,
<                             dxs_hm						
<                             )<<endl;
< 
<                     //electron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
<                     neg_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
<                             1, //index
<                             -1.0,//charge
<                             1, //=1 for active 
<                             11,//pid
<                             0,// parent pid, not in used now
<                             0,// doughter for decay bookkeeping, not in used now
<                             px_ele,
<                             py_ele,
<                             pz_ele,
<                             E0_ele,
<                             0.0005, //mass not in used	
<                             vx_ele, //vx
<                             vy_ele, //vx
<                             vz_ele  //vx
<                             )<<endl;
<                     //hadron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
<                     neg_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
<                             2, //index
<                             charge_neg,//charge
<                             1, //=1 for active 
<                             pid_neg,//pid
<                             0,// parent pid, not in used now
<                             0,// doughter for decay bookkeeping, not in used now
<                             px_had,
<                             py_had,
<                             pz_had,
<                             E0_had, 
<                             mass_had, //mass not in used
<                             vx_had, //vx
<                             vy_had, //vx
<                             vz_had  //vx
<                             )<<endl;/*}}}*/
<                 }
<                 /*}}}*/
<                 if(bXSMode){
<                     t1->Fill();
---
>                 pos_gemc<<Form("    %2d \t %10.4e \t %10.4e \t %10.4e \t %4.3f \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",/*{{{*/
>                         2, //ele+had
>                         x,
>                         z,
>                         pt,
>                         1.0, //pol = 1.0 for now
>                         Q2,
>                         W,
>                         phi_s,
>                         phi_h,
>                         dxs_hp						
>                         )<<endl;
> 
>                 //electron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
>                 pos_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
>                         1, //index
>                         -1.0,//charge
>                         1, //=1 for active 
>                         11,//pid
>                         0,// parent pid, not in used now
>                         0,// doughter for decay bookkeeping, not in used now
>                         px_ele,
>                         py_ele,
>                         pz_ele,
>                         E_ele,
>                         0.0005, //mass not in used	
>                         vx_ele, //vx
>                         vy_ele, //vx
>                         vz_ele  //vx
>                         )<<endl;
>                 //hadron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
>                 pos_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
>                         2, //index
>                         charge_pos,//charge
>                         1, //=1 for active 
>                         pid_pos,//pid
>                         0,// parent pid, not in used now
>                         0,// doughter for decay bookkeeping, not in used now
>                         px_had,
>                         py_had,
>                         pz_had,
>                         E_had, 
>                         mass_had, //mass not in used
>                         vx_had, //vx
>                         vy_had, //vx
>                         vz_had  //vx
>                         )<<endl;/*}}}*/
>             }
>             /*}}}*/
529c529,612
<                     //Just save events in one root files in this case
---
>             /*LUND For Negative Hadron{{{*/
>             //These section will save events based on their XS distributions
>             Double_t cdxs_max_rndm_hm = cdxs_max * gRandom->Uniform(0, 1);
>             if(bLUND&&dxs_hm > cdxs_max_rndm_hm){
>                 //Header:      1#part. 2#x 3#z 4#pt 5#Pol 6#Q2 7#W 8#cxs 9#phi_s 10#phi_h
>                 neg_gemc<<Form("    %2d \t %10.4e \t %10.4e \t %10.4e \t %4.3f \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",/*{{{*/
>                         2, //ele+had
>                         x,
>                         z,
>                         pt,
>                         1.0, //pol = 1.0 for now
>                         Q2,
>                         W,
>                         phi_s,
>                         phi_h,
>                         dxs_hm						
>                         )<<endl;
> 
>                 //electron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
>                 neg_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
>                         1, //index
>                         -1.0,//charge
>                         1, //=1 for active 
>                         11,//pid
>                         0,// parent pid, not in used now
>                         0,// doughter for decay bookkeeping, not in used now
>                         px_ele,
>                         py_ele,
>                         pz_ele,
>                         E_ele,
>                         0.0005, //mass not in used	
>                         vx_ele, //vx
>                         vy_ele, //vx
>                         vz_ele  //vx
>                         )<<endl;
>                 //hadron info: 1#index. 2#charge 3#type 4#pid 5#mpid 6#daughter 7#px 8#py 9#pz 10#E 11#mass 12#vx 13#vy 14#vz
>                 neg_gemc<<Form("%2d \t %4.2f \t %1d \t %8d \t %1d \t %1d \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e \t %10.4e",
>                         2, //index
>                         charge_neg,//charge
>                         1, //=1 for active 
>                         pid_neg,//pid
>                         0,// parent pid, not in used now
>                         0,// doughter for decay bookkeeping, not in used now
>                         px_had,
>                         py_had,
>                         pz_had,
>                         E_had, 
>                         mass_had, //mass not in used
>                         vx_had, //vx
>                         vy_had, //vx
>                         vz_had  //vx
>                         )<<endl;/*}}}*/
>             }
>             /*}}}*/
> 
>             /*Save PI+ ROOT file based on XS distribution{{{*/
>             if(bXSMode&&(dxs_hp > cdxs_max_rndm_hp)){
>                 t1->Fill();
> 
>                 //Just save events in one root files in this case
>                 count[0] ++;//cout << 0 << " " << count[0] << endl;
>                 cout << count[0] <<"\r";
>                 count[2] = number_of_events;
>                 count[3] = number_of_events;
>                 cout<<"**** TEST 1"<<endl;
>             }
>             /*}}}*/
> 
>             /*Save PI- ROOT file based on XS distribution{{{*/
>             if(bXSMode&&(dxs_hm > cdxs_max_rndm_hm)){
>                 t2->Fill();
> 
>                 //Just save events in one root files in this case
>                 count[1] ++;//cout << 0 << " " << count[0] << endl;
>                 cout << count[1] <<"\r";
>                 count[2] = number_of_events;
>                 count[3] = number_of_events;
>                 cout<<"**** TEST 2"<<endl;
>             }
>             /*}}}*/
> 
>             if(!bXSMode&&((dxs_hp+dxs_hm)>1e-33)){/*{{{*/
>                 if(config=="SPECT"){
>                     t1->Fill();
531c614
<                     cout << count[0] <<"\r";
---
> 
536d618
<             }/*}}}*/
538,540c620,621
<             if(!bXSMode){/*{{{*/
<                 if ((dxs_hp)!=0&&(dxs_hm)!=0){
<                     if (Q2<=10.&&pt<=1.0){
---
>                 if(config=="SoLID"||config=="EIC"){
>                     if(Q2<=10.&&pt<=1.0){
544d624
< 
547c627
<                         count[1] ++;//cout << 1 << " " << count[1] << endl;
---
>                         count[1] ++;
550,559c630,637
<                     if(config=="EIC"){
<                         if (Q2>10.&&pt<=1.0){
<                             t3->Fill();
<                             count[2] ++;//cout << 2 << " " << count[2] << endl;
<                         }
<                         if (Q2>10.&&pt>1.0){
<                             t4->Fill();
<                             count[3] ++;//cout << 3 << " " << count[3] <<  endl;
<                         }
<                     } 
---
>                     if (config=="EIC"&&Q2>10.&&pt<=1.0){
>                         t3->Fill();
>                         count[2] ++;//cout << 2 << " " << count[2] << endl;
>                     }
>                     if (config=="EIC"&&Q2>10.&&pt>1.0){
>                         t4->Fill();
>                         count[3] ++;//cout << 3 << " " << count[3] <<  endl;
>                     }
561d638
<                 cout << count[0] << "\t" << count[1] << "\t" << count[2] << "\t" << count[3] << "\r";
563c640,642
<             }/*}}}*/
---
>             }
>             /*}}}*/
>             cout << count[0] << "\t" << count[1] << "\t" << count[2] << "\t" << count[3] << "\r";
565d643
<         /*}}}*/
567c645
<         //judging exitcondition
---
>         //judging exitcondition/*{{{*/
577c655,660
<     }
---
>         else if(config=="SPECT") {
>             if (count[0] < number_of_events) exitcondition=true;
>             else exitcondition=false;
>         } /*}}}*/
>     }/*}}}*/
>     /*}}}*/
580c663
<     file1->Write();
---
>     file1->Write();/*{{{*/
598c681
< 
---
>     /*}}}*/
603a687
>         double weight_in=1.0e-16;
610a695
>         T1->SetBranchAddress("dxs_incl",&dxs_incl);
614a700
>         TBranch *branch_weight_in1=T1->Branch("weight_in",&weight_in,"weight_in/D");
617c703
<             cout<<Form("---Filling weights foor ROOT#1, Nsim=%d, Phase_space = %f", Nsim1, Phase_space)<<endl;
---
>         cout<<Form("---Filling weights foor ROOT#1, Nsim=%d, Phase_space = %f", Nsim1, Phase_space)<<endl;
620a707
>             weight_in=dxs_incl*electron_phase_space/Nsim1;   
623a711
>             if((weight_in)<1e-16) weight_in=1e-16;
625a714
>             if(isnan(weight_in)) weight_in=1e-16;
627a717
>             if(isinf(weight_in)) weight_in=1e-16;
631a722
>             branch_weight_in1->Fill();
644a736
>             T2->SetBranchAddress("dxs_incl",&dxs_incl);
650a743
>             TBranch *branch_weight_in2=T2->Branch("weight_in",&weight_in,"weight_in/D");
656a750
>                 weight_in=dxs_incl*electron_phase_space/Nsim2;   
658c752,754
<              
---
>                 weight_hm=dxs_hm*Phase_space/Nsim2;
> 
>                 if((weight_in)<1e-16) weight_in=1e-16;
660a757
>                 if(isnan(weight_in)) weight_in=1e-16;
662a760
>                 if(isinf(weight_in)) weight_in=1e-16;
665,667c763
< 
< 
<                 weight_hm=dxs_hm*Phase_space/Nsim2;
---
>                 branch_weight_in2->Fill();
681a778
>             T3->SetBranchAddress("dxs_incl",&dxs_incl);
687a785
>             TBranch *branch_weight_in3=T3->Branch("weight_in",&weight_in,"weight_in/D");
693a792
>                 weight_in=dxs_incl*electron_phase_space/Nsim3;   
695c794,796
<             
---
>                 weight_hm=dxs_hm*Phase_space/Nsim3;
> 
>                 if((weight_in)<1e-16) weight_in=1e-16;
697a799
>                 if(isnan(weight_in)) weight_in=1e-16;
699a802
>                 if(isinf(weight_in)) weight_in=1e-16;
702,704c805,806
< 
<  
<                 weight_hm=dxs_hm*Phase_space/Nsim3;
---
>                 
>                 branch_weight_in3->Fill();
716a819
>             T4->SetBranchAddress("dxs_incl",&dxs_incl);
722a826
>             TBranch *branch_weight_in4=T4->Branch("weight_in",&weight_in,"weight_in/D");
728a833
>                 weight_in=dxs_incl*electron_phase_space/Nsim4;   
731c836,837
<             
---
> 
>                 if((weight_in)<1e-16) weight_in=1e-16;
733a840
>                 if(isnan(weight_in)) weight_in=1e-16;
735a843
>                 if(isinf(weight_in)) weight_in=1e-16;
739c847
< 
---
>                 branch_weight_in4->Fill();
751c859
< }
---
>     }
753,773c861,874
< /*Init(){{{*/
< void Init (const TString kInputFile){
<     const Int_t CHAR_LEN = 1000;
< 
<     cout<<"============================================================"<<endl;
<     cout<<"&& Initializing Parameters from "<<kInputFile<<" ..."<<endl;
<     int i,j,k;
<     vector<TString> inputdata;
<     /*Read INPUTfile{{{*/
<     FILE* INPUTfile;
<     INPUTfile=fopen(kInputFile.Data(),"r");
<     char buf[CHAR_LEN];
<     char data[CHAR_LEN];
<     while ( fgets(buf,CHAR_LEN,INPUTfile) )
<     {
<         i=0;
<         while ( buf[i]==' '|| buf[i]=='\t' )
<         {
<             i++;
<         }
<         if ( buf[i]!='#' )
---
>     /*Init(){{{*/
>     void Init (const TString kInputFile){
>         const Int_t CHAR_LEN = 1000;
> 
>         cout<<"============================================================"<<endl;
>         cout<<"&& Initializing Parameters from "<<kInputFile<<" ..."<<endl;
>         int i,j,k;
>         vector<TString> inputdata;
>         /*Read INPUTfile{{{*/
>         FILE* INPUTfile;
>         INPUTfile=fopen(kInputFile.Data(),"r");
>         char buf[CHAR_LEN];
>         char data[CHAR_LEN];
>         while ( fgets(buf,CHAR_LEN,INPUTfile) )
775,776c876,877
<             j=0;
<             while ( buf[i]!='#' && buf[i]!='\0' && buf[i]!='\t' && buf[i]!='\n' )
---
>             i=0;
>             while ( buf[i]==' '|| buf[i]=='\t' )
778,780c879
<                 if( buf[i]!=' ' && buf[i]!='\t' && buf[i]!='\n' )
<                     data[j]=buf[i];
<                 i++; j++;
---
>                 i++;
782,783c881
<             data[j]='\0';
<             while ( data[--j]==' ' || data[j]=='\t'  || data[j]=='\n' )
---
>             if ( buf[i]!='#' )
785c883,889
<                 //remove space or tab at the end of data
---
>                 j=0;
>                 while ( buf[i]!='#' && buf[i]!='\0' && buf[i]!='\t' && buf[i]!='\n' )
>                 {
>                     if( buf[i]!=' ' && buf[i]!='\t' && buf[i]!='\n' )
>                         data[j]=buf[i];
>                     i++; j++;
>                 }
786a891,896
>                 while ( data[--j]==' ' || data[j]=='\t'  || data[j]=='\n' )
>                 {
>                     //remove space or tab at the end of data
>                     data[j]='\0';
>                 }
>                 inputdata.push_back(data);
788c898
<             inputdata.push_back(data);
---
>             //else it's comment, skipped
790,791d899
<         //else it's comment, skipped
<     }
793,794c901,935
<     fclose(INPUTfile);
<     /*}}}*/
---
>         fclose(INPUTfile);
>         /*}}}*/
> 
>         /*Set Global Value{{{*/
>         k=0;
>         A=atoi(inputdata[k++]);
>         Z=atoi(inputdata[k++]);
>         particle_flag=atoi(inputdata[k++]);
>         momentum_ele=atof(inputdata[k++]);
>         momentum_ion=atof(inputdata[k++]);
>         number_of_events=atoi(inputdata[k++]);
>         FileNo=atoi(inputdata[k++]);
>         config= inputdata[k++];
>         model= inputdata[k++];
>         cdxs_max=atof(inputdata[k++]);
>         bLUND=atoi(inputdata[k++]);
>         bXSMode=atoi(inputdata[k++]);
>         Output_FileName= inputdata[k++];
>         bDebug=atoi(inputdata[k++]);
> 
>         //A=atoi(inputdata[k++].c_str());
>         //Z=atoi(inputdata[k++].c_str());
>         //particle_flag=atoi(inputdata[k++].c_str());
>         //momentum_ele=atof(inputdata[k++].c_str());
>         //momentum_ion=atof(inputdata[k++].c_str());
>         //FileNo=atoi(inputdata[k++].c_str());
>         //number_of_events=atoi(inputdata[k++].c_str());
>         //config= inputdata[k++].c_str();
>         //model= inputdata[k++].c_str();
>         //cdxs_max=atof(inputdata[k++].c_str());
>         //bLUND=atoi(inputdata[k++].c_str());
>         //bXSMode=atoi(inputdata[k++].c_str());
>         //Output_FileName= inputdata[k++].c_str();
>         //bDebug=atoi(inputdata[k++].c_str());
>         /*}}}*/
796,826c937,963
<     /*Set Global Value{{{*/
<     k=0;
<     A=atoi(inputdata[k++]);
<     Z=atoi(inputdata[k++]);
<     particle_flag=atoi(inputdata[k++]);
<     momentum_ele=atof(inputdata[k++]);
<     momentum_ion=atof(inputdata[k++]);
<     number_of_events=atoi(inputdata[k++]);
<     FileNo=atoi(inputdata[k++]);
<     config= inputdata[k++];
<     model= inputdata[k++];
<     cdxs_max=atof(inputdata[k++]);
<     bLUND=atoi(inputdata[k++]);
<     bXSMode=atoi(inputdata[k++]);
<     Output_FileName= inputdata[k++];
<     bDebug=atoi(inputdata[k++]);
< 
<     //A=atoi(inputdata[k++].c_str());
<     //Z=atoi(inputdata[k++].c_str());
<     //particle_flag=atoi(inputdata[k++].c_str());
<     //momentum_ele=atof(inputdata[k++].c_str());
<     //momentum_ion=atof(inputdata[k++].c_str());
<     //FileNo=atoi(inputdata[k++].c_str());
<     //number_of_events=atoi(inputdata[k++].c_str());
<     //config= inputdata[k++].c_str();
<     //model= inputdata[k++].c_str();
<     //cdxs_max=atof(inputdata[k++].c_str());
<     //bLUND=atoi(inputdata[k++].c_str());
<     //bXSMode=atoi(inputdata[k++].c_str());
<     //Output_FileName= inputdata[k++].c_str();
<     //bDebug=atoi(inputdata[k++].c_str());
---
>         cout<<"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"<<endl;
>         cout<<"---- A = "<<A<<endl;
>         cout<<"---- Z = "<<Z<<endl;
>         cout<<"---- Partile( 1-->Pion, 2-->Kaon) = ";
>         if(particle_flag==1) cout<<"Pion"<<endl;
>         else if(particle_flag==2) cout<<"Kaon"<<endl;
>         else cout<<"*** ERROR, a wrong particle flag in your input-file!!!"<<endl;
>         cout<<"---- P_e = "<<momentum_ele<<" GeV"<<endl;
>         cout<<"---- P_A = "<<momentum_ion<<" GeV"<<endl;
>         cout<<"---- #Events = "<<number_of_events<<endl;
>         cout<<"---- File# = "<< FileNo;
>         if(FileNo==0) cout<<" (from command line, e.g. ./GetSIDIS input.data FileNo)"<<endl;
>         else cout<<endl;
>         cout<<"---- Configs = "<<config.Data()<<endl;
>         cout<<"---- Model = "<<model.Data()<<endl;
>         cout<<"---- Save to LUND? = "<<bLUND<<endl;
>         cout<<"---- Save in XSMode? = "<<bXSMode<<endl;
>         cout<<"---- Rename files to (*.LUND, *_0.root)= "<<Output_FileName;
>         if(Output_FileName=="NONE") cout <<" (use the default name)"<<endl;
>         else cout<<endl;
>         cout<<"---- Debug? = "<<bDebug<<endl;
>         cout<<"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"<<endl;
> 
>         inputdata.clear();
>         cerr<<"&& Initialization done!"<<endl;
>         cout<<"============================================================"<<endl;
>     }
829,904c966,1012
<     cout<<"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"<<endl;
<     cout<<"---- A = "<<A<<endl;
<     cout<<"---- Z = "<<Z<<endl;
<     cout<<"---- Partile( 1-->Pion, 2-->Kaon) = ";
<     if(particle_flag==1) cout<<"Pion"<<endl;
<     else if(particle_flag==2) cout<<"Kaon"<<endl;
<     else cout<<"*** ERROR, a wrong particle flag in your input-file!!!"<<endl;
<     cout<<"---- P_e = "<<momentum_ele<<" GeV"<<endl;
<     cout<<"---- P_A = "<<momentum_ion<<" GeV"<<endl;
<     cout<<"---- #Events = "<<number_of_events<<endl;
<     cout<<"---- File# = "<< FileNo;
<     if(FileNo==0) cout<<" (from command line, e.g. ./GetSIDIS input.data FileNo)"<<endl;
<     else cout<<endl;
<     cout<<"---- Configs = "<<config.Data()<<endl;
<     cout<<"---- Model = "<<model.Data()<<endl;
<     cout<<"---- Save to LUND? = "<<bLUND<<endl;
<     cout<<"---- Save in XSMode? = "<<bXSMode<<endl;
<     cout<<"---- Rename files to (*.LUND, *_0.root)= "<<Output_FileName;
<     if(Output_FileName=="NONE") cout <<" (use the default name)"<<endl;
<     else cout<<endl;
<     cout<<"---- Debug? = "<<bDebug<<endl;
<     cout<<"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"<<endl;
< 
<     inputdata.clear();
<     cerr<<"&& Initialization done!"<<endl;
<     cout<<"============================================================"<<endl;
< }
< /*}}}*/
< 
< /*double GetIonMass(const int A, const int Z){{{*/
< double GetIonMass(const int A, const int Z){
<     double ion_mass = 0.0;
<     if(A==1 && Z==1)//Hydrogen
<         ion_mass = mass_p;
<     else if(A==1 && Z==0)//Neutron
<         ion_mass = mass_n;
<     else if(A==2 && Z==1)//Deutron
<         ion_mass = mass_u*2.014102;
<     else if(A==3 && Z==1)//Tritium
<         ion_mass = mass_u*3.016049;
<     else if(A==3 && Z==2)//He3
<         ion_mass = mass_u*3.016029;
<     else if(A==4 && Z==2)//He4
<         ion_mass = mass_u*4.002602;
<     else if(A==7 && Z==3)//Lithium
<         ion_mass = mass_u*6.941000;
<     else if(A==9 && Z==4)//Be9
<         ion_mass = mass_u*9.012182;
<     else if(A==10 && Z==5)//Boron
<         ion_mass = mass_u*10.811000;
<     else if(A==12 && Z==6)//Carbon
<         ion_mass = mass_u*12.010700;
<     else if(A==14 && Z==7)//Nitrogen
<         ion_mass = mass_u*14.0067;
<     else if(A==16 && Z==8)//Oxygen
<         ion_mass = mass_u*15.9994;
<     else if(A==27 && Z==13)//Al
<         ion_mass = mass_u*26.981539;
<     else if(A==40 && Z==20)//C40
<         ion_mass = mass_u*40.07800;
<     else if(A==48 && Z==20)//C40
<         ion_mass = mass_u*47.952534;
<     else if(A==56 && Z==26)//Fe
<         ion_mass = mass_u*55.84500;
<     else if(A==64 && Z==29)//Cu
<         ion_mass = mass_u*63.546;
<     else if(A==197 && Z==79)//Cu
<         ion_mass = mass_u*196.966569;
<     //if the target is not in the list above, simply add the total mass of protons and neutrons
<     //but in general you can look at the PERIODIC TABLE for new target you want to add
<     else
<         ion_mass = Z*mass_p+(A-Z)*mass_n;
< 
<     return ion_mass;
< }
< /*}}}*/
---
>     /*double GetIonMass(const int A, const int Z){{{*/
>     double GetIonMass(const int A, const int Z){
>         double ion_mass = 0.0;
>         if(A==1 && Z==1)//Hydrogen
>             ion_mass = mass_p;
>         else if(A==1 && Z==0)//Neutron
>             ion_mass = mass_n;
>         else if(A==2 && Z==1)//Deutron
>             ion_mass = mass_u*2.014102;
>         else if(A==3 && Z==1)//Tritium
>             ion_mass = mass_u*3.016049;
>         else if(A==3 && Z==2)//He3
>             ion_mass = mass_u*3.016029;
>         else if(A==4 && Z==2)//He4
>             ion_mass = mass_u*4.002602;
>         else if(A==7 && Z==3)//Lithium
>             ion_mass = mass_u*6.941000;
>         else if(A==9 && Z==4)//Be9
>             ion_mass = mass_u*9.012182;
>         else if(A==10 && Z==5)//Boron
>             ion_mass = mass_u*10.811000;
>         else if(A==12 && Z==6)//Carbon
>             ion_mass = mass_u*12.010700;
>         else if(A==14 && Z==7)//Nitrogen
>             ion_mass = mass_u*14.0067;
>         else if(A==16 && Z==8)//Oxygen
>             ion_mass = mass_u*15.9994;
>         else if(A==27 && Z==13)//Al
>             ion_mass = mass_u*26.981539;
>         else if(A==40 && Z==20)//C40
>             ion_mass = mass_u*40.07800;
>         else if(A==48 && Z==20)//C40
>             ion_mass = mass_u*47.952534;
>         else if(A==56 && Z==26)//Fe
>             ion_mass = mass_u*55.84500;
>         else if(A==64 && Z==29)//Cu
>             ion_mass = mass_u*63.546;
>         else if(A==197 && Z==79)//Cu
>             ion_mass = mass_u*196.966569;
>         //if the target is not in the list above, simply add the total mass of protons and neutrons
>         //but in general you can look at the PERIODIC TABLE for new target you want to add
>         else
>             ion_mass = Z*mass_p+(A-Z)*mass_n;
> 
>         return ion_mass;
>     }
>     /*}}}*/
